plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
    id 'io.vertx.vertx-plugin' version '0.0.4'
}

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile "io.vertx:vertx-core:3.5.3"
    compile "io.vertx:vertx-lang-kotlin:3.5.3"
    compile 'io.vertx:vertx-web:3.5.3'
}

vertx {
    mainVerticle = "ToDo.ActivityMain"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}
task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'ToDo.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('ToDo.jar').delete()
}
jar {
    manifest {
        attributes 'Main-Class': 'io.vertx.blog.first.ActivityMainKt'
    }

    // This line of code recursively collects and copies all of a project's files
    // and adds them to the JAR itself. One can extend this task, to skip certain
    // files or particular types at will
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}